
My Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  0000073e  000007d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000073e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  0080010a  0080010a  000007dc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000007dc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000838  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  00000878  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f8f  00000000  00000000  00000990  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009e7  00000000  00000000  0000191f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007d7  00000000  00000000  00002306  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000188  00000000  00000000  00002ae0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000064e  00000000  00000000  00002c68  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001d0  00000000  00000000  000032b6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00003486  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
   4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
   6:	31 c0       	rjmp	.+98     	; 0x6a <__bad_interrupt>
   8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
   a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
   c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
   e:	2d c0       	rjmp	.+90     	; 0x6a <__bad_interrupt>
  10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
  12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
  14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
  16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
  18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
  1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
  1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
  1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
  20:	24 c0       	rjmp	.+72     	; 0x6a <__bad_interrupt>
  22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
  24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
  26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
  28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
  2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
  2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
  2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
  30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
  32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	d4 e0       	ldi	r29, 0x04	; 4
  3c:	de bf       	out	0x3e, r29	; 62
  3e:	cd bf       	out	0x3d, r28	; 61

00000040 <__do_copy_data>:
  40:	11 e0       	ldi	r17, 0x01	; 1
  42:	a0 e0       	ldi	r26, 0x00	; 0
  44:	b1 e0       	ldi	r27, 0x01	; 1
  46:	ee e3       	ldi	r30, 0x3E	; 62
  48:	f7 e0       	ldi	r31, 0x07	; 7
  4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
  4c:	05 90       	lpm	r0, Z+
  4e:	0d 92       	st	X+, r0
  50:	aa 30       	cpi	r26, 0x0A	; 10
  52:	b1 07       	cpc	r27, r17
  54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
  56:	21 e0       	ldi	r18, 0x01	; 1
  58:	aa e0       	ldi	r26, 0x0A	; 10
  5a:	b1 e0       	ldi	r27, 0x01	; 1
  5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
  5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
  60:	a0 32       	cpi	r26, 0x20	; 32
  62:	b2 07       	cpc	r27, r18
  64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
  66:	39 d0       	rcall	.+114    	; 0xda <main>
  68:	68 c3       	rjmp	.+1744   	; 0x73a <_exit>

0000006a <__bad_interrupt>:
  6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
  6c:	52 d0       	rcall	.+164    	; 0x112 <system_init>
  6e:	08 95       	ret

00000070 <USART_0_test_usart_basic>:
#include <atomic.h>

static uint8_t rx[16];

uint8_t USART_0_test_usart_basic(void)
{
  70:	0f 93       	push	r16
  72:	1f 93       	push	r17
  74:	cf 93       	push	r28
	uint8_t i;

	// If USART Basic driver is in IRQ-mode, enable global interrupts.
	ENABLE_INTERRUPTS();
  76:	78 94       	sei
	// Test driver functions, assumes that the USART RX and
	// TX pins have been loopbacked, or that USART hardware
	// is configured in loopback mode

	// Test printf() support
	printf("hello");
  78:	80 e0       	ldi	r24, 0x00	; 0
  7a:	91 e0       	ldi	r25, 0x01	; 1
  7c:	9f 93       	push	r25
  7e:	8f 93       	push	r24
  80:	90 d0       	rcall	.+288    	; 0x1a2 <printf>

	// Check that "hello" was received on loopback RX.
	// Initialize rx buffer so strncmp() check will work
	memset(rx, 0, sizeof(rx));
  82:	80 e1       	ldi	r24, 0x10	; 16
  84:	ea e0       	ldi	r30, 0x0A	; 10
  86:	f1 e0       	ldi	r31, 0x01	; 1
  88:	df 01       	movw	r26, r30
  8a:	1d 92       	st	X+, r1
  8c:	8a 95       	dec	r24
  8e:	e9 f7       	brne	.-6      	; 0x8a <USART_0_test_usart_basic+0x1a>
	for (i = 0; i < strlen("hello"); i++) {
  90:	0f 90       	pop	r0
  92:	0f 90       	pop	r0
  94:	c0 e0       	ldi	r28, 0x00	; 0
  96:	08 c0       	rjmp	.+16     	; 0xa8 <USART_0_test_usart_basic+0x38>
		rx[i] = USART_0_read(); // Blocks until character is available
  98:	0c 2f       	mov	r16, r28
  9a:	10 e0       	ldi	r17, 0x00	; 0
  9c:	6d d0       	rcall	.+218    	; 0x178 <USART_0_read>
  9e:	f8 01       	movw	r30, r16
  a0:	e6 5f       	subi	r30, 0xF6	; 246
  a2:	fe 4f       	sbci	r31, 0xFE	; 254
  a4:	80 83       	st	Z, r24
	printf("hello");

	// Check that "hello" was received on loopback RX.
	// Initialize rx buffer so strncmp() check will work
	memset(rx, 0, sizeof(rx));
	for (i = 0; i < strlen("hello"); i++) {
  a6:	cf 5f       	subi	r28, 0xFF	; 255
  a8:	c5 30       	cpi	r28, 0x05	; 5
  aa:	b0 f3       	brcs	.-20     	; 0x98 <USART_0_test_usart_basic+0x28>
		rx[i] = USART_0_read(); // Blocks until character is available
	}

	// Compare received and expected data
	if (strncmp("hello", (char *)rx, strlen("hello")) != 0)
  ac:	45 e0       	ldi	r20, 0x05	; 5
  ae:	50 e0       	ldi	r21, 0x00	; 0
  b0:	6a e0       	ldi	r22, 0x0A	; 10
  b2:	71 e0       	ldi	r23, 0x01	; 1
  b4:	80 e0       	ldi	r24, 0x00	; 0
  b6:	91 e0       	ldi	r25, 0x01	; 1
  b8:	66 d0       	rcall	.+204    	; 0x186 <strncmp>
  ba:	89 2b       	or	r24, r25
  bc:	49 f4       	brne	.+18     	; 0xd0 <USART_0_test_usart_basic+0x60>
		return 0; // Error: Mismatch

	// If we get here, everything was OK
	printf("ok");
  be:	86 e0       	ldi	r24, 0x06	; 6
  c0:	91 e0       	ldi	r25, 0x01	; 1
  c2:	9f 93       	push	r25
  c4:	8f 93       	push	r24
  c6:	6d d0       	rcall	.+218    	; 0x1a2 <printf>

	return 1;
  c8:	0f 90       	pop	r0
  ca:	0f 90       	pop	r0
  cc:	81 e0       	ldi	r24, 0x01	; 1
  ce:	01 c0       	rjmp	.+2      	; 0xd2 <USART_0_test_usart_basic+0x62>
		rx[i] = USART_0_read(); // Blocks until character is available
	}

	// Compare received and expected data
	if (strncmp("hello", (char *)rx, strlen("hello")) != 0)
		return 0; // Error: Mismatch
  d0:	80 e0       	ldi	r24, 0x00	; 0

	// If we get here, everything was OK
	printf("ok");

	return 1;
}
  d2:	cf 91       	pop	r28
  d4:	1f 91       	pop	r17
  d6:	0f 91       	pop	r16
  d8:	08 95       	ret

000000da <main>:
#include <util/delay.h>

int main(void)
{
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
  da:	c8 df       	rcall	.-112    	; 0x6c <atmel_start_init>

	/* Replace with your application code */
	while (1) 
	{
		USART_0_test_usart_basic();
  dc:	c9 df       	rcall	.-110    	; 0x70 <USART_0_test_usart_basic>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  de:	2f ef       	ldi	r18, 0xFF	; 255
  e0:	84 e3       	ldi	r24, 0x34	; 52
  e2:	9c e0       	ldi	r25, 0x0C	; 12
  e4:	21 50       	subi	r18, 0x01	; 1
  e6:	80 40       	sbci	r24, 0x00	; 0
  e8:	90 40       	sbci	r25, 0x00	; 0
  ea:	e1 f7       	brne	.-8      	; 0xe4 <main+0xa>
  ec:	00 c0       	rjmp	.+0      	; 0xee <main+0x14>
  ee:	00 00       	nop
 *
 * \param[in] pin       The pin number for device
 */
static inline void PORTD_toggle_pin_level(const uint8_t pin)
{
	PIND = 1 << pin;
  f0:	80 e4       	ldi	r24, 0x40	; 64
  f2:	89 b9       	out	0x09, r24	; 9
  f4:	f3 cf       	rjmp	.-26     	; 0xdc <main+0x2>

000000f6 <USART_0_initialization>:
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
  f6:	8a b1       	in	r24, 0x0a	; 10
  f8:	8e 7f       	andi	r24, 0xFE	; 254
  fa:	8a b9       	out	0x0a, r24	; 10
		DDRD &= ~(1 << pin);

		PORTD |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTD &= ~(1 << pin);
  fc:	8b b1       	in	r24, 0x0b	; 11
  fe:	8e 7f       	andi	r24, 0xFE	; 254
 100:	8b b9       	out	0x0b, r24	; 11
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRD |= 1 << pin;
 102:	8a b1       	in	r24, 0x0a	; 10
 104:	82 60       	ori	r24, 0x02	; 2
 106:	8a b9       	out	0x0a, r24	; 10
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTD |= 1 << pin;
	} else {
		PORTD &= ~(1 << pin);
 108:	8b b1       	in	r24, 0x0b	; 11
 10a:	8d 7f       	andi	r24, 0xFD	; 253
 10c:	8b b9       	out	0x0b, r24	; 11
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	USART_0_init();
 10e:	23 d0       	rcall	.+70     	; 0x156 <USART_0_init>
 110:	08 95       	ret

00000112 <system_init>:
{
	/* On AVR devices all peripherals are enabled from power on reset, this
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	PRR = (1 << PRSPI) | (1 << PRTIM2) | (1 << PRTIM0) | (1 << PRTIM1) | (1 << PRTWI) | (1 << PRUSART0) | (1 << PRADC);
 112:	8f ee       	ldi	r24, 0xEF	; 239
 114:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7fe064>
		break;
	case PORT_DIR_OUT:
		DDRB |= mask;
		break;
	case PORT_DIR_OFF:
		DDRB &= ~mask;
 118:	84 b1       	in	r24, 0x04	; 4
 11a:	14 b8       	out	0x04, r1	; 4

		PORTB |= mask;
 11c:	85 b1       	in	r24, 0x05	; 5
 11e:	9f ef       	ldi	r25, 0xFF	; 255
 120:	95 b9       	out	0x05, r25	; 5
		break;
	case PORT_DIR_OUT:
		DDRC |= mask;
		break;
	case PORT_DIR_OFF:
		DDRC &= ~mask;
 122:	87 b1       	in	r24, 0x07	; 7
 124:	80 78       	andi	r24, 0x80	; 128
 126:	87 b9       	out	0x07, r24	; 7

		PORTC |= mask;
 128:	88 b1       	in	r24, 0x08	; 8
 12a:	8f 67       	ori	r24, 0x7F	; 127
 12c:	88 b9       	out	0x08, r24	; 8
		break;
	case PORT_DIR_OUT:
		DDRD |= mask;
		break;
	case PORT_DIR_OFF:
		DDRD &= ~mask;
 12e:	8a b1       	in	r24, 0x0a	; 10
 130:	1a b8       	out	0x0a, r1	; 10

		PORTD |= mask;
 132:	8b b1       	in	r24, 0x0b	; 11
 134:	9b b9       	out	0x0b, r25	; 11
 * \return Initialization status.
 */
static inline int8_t sysctrl_init()
{
	/* Set up system clock prescaler according to configuration */
	protected_write_io((void *)&CLKPR, 1 << CLKPCE, (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0));
 136:	40 e0       	ldi	r20, 0x00	; 0
 138:	60 e8       	ldi	r22, 0x80	; 128
 13a:	81 e6       	ldi	r24, 0x61	; 97
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	04 d0       	rcall	.+8      	; 0x148 <protected_write_io>

	SMCR = (0 << SM2) | (0 << SM1) | (0 << SM0) | // Idle
 140:	13 be       	out	0x33, r1	; 51
	       (0 << SE);

	MCUCR = (0 << PUD);
 142:	15 be       	out	0x35, r1	; 53
{
	mcu_init();

	sysctrl_init();

	USART_0_initialization();
 144:	d8 df       	rcall	.-80     	; 0xf6 <USART_0_initialization>
 146:	08 95       	ret

00000148 <protected_write_io>:
#if defined(__GNUC__)
	/*
	 * We need to disable interrupts globally before the protected
	 * sequence. In order to do that we must save SREG first.
	 */
	in      r18,    _SFR_IO_ADDR(SREG)
 148:	2f b7       	in	r18, 0x3f	; 63
	cli
 14a:	f8 94       	cli
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
#endif
	movw    r30, r24                // Load addr into Z
 14c:	fc 01       	movw	r30, r24
	st      Z, r22                  // Write protection bit to I/O register
 14e:	60 83       	st	Z, r22
	st      Z, r20                  // Write value to I/O register
 150:	40 83       	st	Z, r20
	out     _SFR_IO_ADDR(SREG), r18
 152:	2f bf       	out	0x3f, r18	; 63

	ret                             // Return to caller
 154:	08 95       	ret

00000156 <USART_0_init>:
 * \retval false Data completely shifted out if the USART shift register
 */
bool USART_0_is_tx_busy()
{
	return (!(UCSR0A & (1 << TXC0)));
}
 156:	e4 e6       	ldi	r30, 0x64	; 100
 158:	f0 e0       	ldi	r31, 0x00	; 0
 15a:	80 81       	ld	r24, Z
 15c:	8d 7f       	andi	r24, 0xFD	; 253
 15e:	80 83       	st	Z, r24
 160:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7fe0c5>
 164:	83 e3       	ldi	r24, 0x33	; 51
 166:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fe0c4>
 16a:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fe0c0>
 16e:	88 e9       	ldi	r24, 0x98	; 152
 170:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7fe0c1>
 174:	80 e0       	ldi	r24, 0x00	; 0
 176:	08 95       	ret

00000178 <USART_0_read>:
 *
 * \return Data read from the USART_0 module
 */
uint8_t USART_0_read()
{
	while (!(UCSR0A & (1 << RXC0)))
 178:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fe0c0>
 17c:	88 23       	and	r24, r24
 17e:	e4 f7       	brge	.-8      	; 0x178 <USART_0_read>
		;
	return UDR0;
 180:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fe0c6>
}
 184:	08 95       	ret

00000186 <strncmp>:
 186:	fb 01       	movw	r30, r22
 188:	dc 01       	movw	r26, r24
 18a:	41 50       	subi	r20, 0x01	; 1
 18c:	50 40       	sbci	r21, 0x00	; 0
 18e:	30 f0       	brcs	.+12     	; 0x19c <strncmp+0x16>
 190:	8d 91       	ld	r24, X+
 192:	01 90       	ld	r0, Z+
 194:	80 19       	sub	r24, r0
 196:	19 f4       	brne	.+6      	; 0x19e <strncmp+0x18>
 198:	00 20       	and	r0, r0
 19a:	b9 f7       	brne	.-18     	; 0x18a <strncmp+0x4>
 19c:	88 1b       	sub	r24, r24
 19e:	99 0b       	sbc	r25, r25
 1a0:	08 95       	ret

000001a2 <printf>:
 1a2:	a0 e0       	ldi	r26, 0x00	; 0
 1a4:	b0 e0       	ldi	r27, 0x00	; 0
 1a6:	e6 ed       	ldi	r30, 0xD6	; 214
 1a8:	f0 e0       	ldi	r31, 0x00	; 0
 1aa:	a0 c2       	rjmp	.+1344   	; 0x6ec <__prologue_saves__+0x20>
 1ac:	ae 01       	movw	r20, r28
 1ae:	4b 5f       	subi	r20, 0xFB	; 251
 1b0:	5f 4f       	sbci	r21, 0xFF	; 255
 1b2:	fa 01       	movw	r30, r20
 1b4:	61 91       	ld	r22, Z+
 1b6:	71 91       	ld	r23, Z+
 1b8:	af 01       	movw	r20, r30
 1ba:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__iob+0x2>
 1be:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__iob+0x3>
 1c2:	02 d0       	rcall	.+4      	; 0x1c8 <vfprintf>
 1c4:	e2 e0       	ldi	r30, 0x02	; 2
 1c6:	ae c2       	rjmp	.+1372   	; 0x724 <__epilogue_restores__+0x20>

000001c8 <vfprintf>:
 1c8:	ab e0       	ldi	r26, 0x0B	; 11
 1ca:	b0 e0       	ldi	r27, 0x00	; 0
 1cc:	e9 ee       	ldi	r30, 0xE9	; 233
 1ce:	f0 e0       	ldi	r31, 0x00	; 0
 1d0:	7d c2       	rjmp	.+1274   	; 0x6cc <__prologue_saves__>
 1d2:	6c 01       	movw	r12, r24
 1d4:	7b 01       	movw	r14, r22
 1d6:	8a 01       	movw	r16, r20
 1d8:	fc 01       	movw	r30, r24
 1da:	17 82       	std	Z+7, r1	; 0x07
 1dc:	16 82       	std	Z+6, r1	; 0x06
 1de:	83 81       	ldd	r24, Z+3	; 0x03
 1e0:	81 ff       	sbrs	r24, 1
 1e2:	bf c1       	rjmp	.+894    	; 0x562 <__stack+0x63>
 1e4:	ce 01       	movw	r24, r28
 1e6:	01 96       	adiw	r24, 0x01	; 1
 1e8:	3c 01       	movw	r6, r24
 1ea:	f6 01       	movw	r30, r12
 1ec:	93 81       	ldd	r25, Z+3	; 0x03
 1ee:	f7 01       	movw	r30, r14
 1f0:	93 fd       	sbrc	r25, 3
 1f2:	85 91       	lpm	r24, Z+
 1f4:	93 ff       	sbrs	r25, 3
 1f6:	81 91       	ld	r24, Z+
 1f8:	7f 01       	movw	r14, r30
 1fa:	88 23       	and	r24, r24
 1fc:	09 f4       	brne	.+2      	; 0x200 <__EEPROM_REGION_LENGTH__>
 1fe:	ad c1       	rjmp	.+858    	; 0x55a <__stack+0x5b>
 200:	85 32       	cpi	r24, 0x25	; 37
 202:	39 f4       	brne	.+14     	; 0x212 <__EEPROM_REGION_LENGTH__+0x12>
 204:	93 fd       	sbrc	r25, 3
 206:	85 91       	lpm	r24, Z+
 208:	93 ff       	sbrs	r25, 3
 20a:	81 91       	ld	r24, Z+
 20c:	7f 01       	movw	r14, r30
 20e:	85 32       	cpi	r24, 0x25	; 37
 210:	21 f4       	brne	.+8      	; 0x21a <__EEPROM_REGION_LENGTH__+0x1a>
 212:	b6 01       	movw	r22, r12
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	c0 d1       	rcall	.+896    	; 0x598 <fputc>
 218:	e8 cf       	rjmp	.-48     	; 0x1ea <vfprintf+0x22>
 21a:	91 2c       	mov	r9, r1
 21c:	21 2c       	mov	r2, r1
 21e:	31 2c       	mov	r3, r1
 220:	ff e1       	ldi	r31, 0x1F	; 31
 222:	f3 15       	cp	r31, r3
 224:	d8 f0       	brcs	.+54     	; 0x25c <__EEPROM_REGION_LENGTH__+0x5c>
 226:	8b 32       	cpi	r24, 0x2B	; 43
 228:	79 f0       	breq	.+30     	; 0x248 <__EEPROM_REGION_LENGTH__+0x48>
 22a:	38 f4       	brcc	.+14     	; 0x23a <__EEPROM_REGION_LENGTH__+0x3a>
 22c:	80 32       	cpi	r24, 0x20	; 32
 22e:	79 f0       	breq	.+30     	; 0x24e <__EEPROM_REGION_LENGTH__+0x4e>
 230:	83 32       	cpi	r24, 0x23	; 35
 232:	a1 f4       	brne	.+40     	; 0x25c <__EEPROM_REGION_LENGTH__+0x5c>
 234:	23 2d       	mov	r18, r3
 236:	20 61       	ori	r18, 0x10	; 16
 238:	1d c0       	rjmp	.+58     	; 0x274 <__EEPROM_REGION_LENGTH__+0x74>
 23a:	8d 32       	cpi	r24, 0x2D	; 45
 23c:	61 f0       	breq	.+24     	; 0x256 <__EEPROM_REGION_LENGTH__+0x56>
 23e:	80 33       	cpi	r24, 0x30	; 48
 240:	69 f4       	brne	.+26     	; 0x25c <__EEPROM_REGION_LENGTH__+0x5c>
 242:	23 2d       	mov	r18, r3
 244:	21 60       	ori	r18, 0x01	; 1
 246:	16 c0       	rjmp	.+44     	; 0x274 <__EEPROM_REGION_LENGTH__+0x74>
 248:	83 2d       	mov	r24, r3
 24a:	82 60       	ori	r24, 0x02	; 2
 24c:	38 2e       	mov	r3, r24
 24e:	e3 2d       	mov	r30, r3
 250:	e4 60       	ori	r30, 0x04	; 4
 252:	3e 2e       	mov	r3, r30
 254:	2a c0       	rjmp	.+84     	; 0x2aa <__EEPROM_REGION_LENGTH__+0xaa>
 256:	f3 2d       	mov	r31, r3
 258:	f8 60       	ori	r31, 0x08	; 8
 25a:	1d c0       	rjmp	.+58     	; 0x296 <__EEPROM_REGION_LENGTH__+0x96>
 25c:	37 fc       	sbrc	r3, 7
 25e:	2d c0       	rjmp	.+90     	; 0x2ba <__EEPROM_REGION_LENGTH__+0xba>
 260:	20 ed       	ldi	r18, 0xD0	; 208
 262:	28 0f       	add	r18, r24
 264:	2a 30       	cpi	r18, 0x0A	; 10
 266:	40 f0       	brcs	.+16     	; 0x278 <__EEPROM_REGION_LENGTH__+0x78>
 268:	8e 32       	cpi	r24, 0x2E	; 46
 26a:	b9 f4       	brne	.+46     	; 0x29a <__EEPROM_REGION_LENGTH__+0x9a>
 26c:	36 fc       	sbrc	r3, 6
 26e:	75 c1       	rjmp	.+746    	; 0x55a <__stack+0x5b>
 270:	23 2d       	mov	r18, r3
 272:	20 64       	ori	r18, 0x40	; 64
 274:	32 2e       	mov	r3, r18
 276:	19 c0       	rjmp	.+50     	; 0x2aa <__EEPROM_REGION_LENGTH__+0xaa>
 278:	36 fe       	sbrs	r3, 6
 27a:	06 c0       	rjmp	.+12     	; 0x288 <__EEPROM_REGION_LENGTH__+0x88>
 27c:	8a e0       	ldi	r24, 0x0A	; 10
 27e:	98 9e       	mul	r9, r24
 280:	20 0d       	add	r18, r0
 282:	11 24       	eor	r1, r1
 284:	92 2e       	mov	r9, r18
 286:	11 c0       	rjmp	.+34     	; 0x2aa <__EEPROM_REGION_LENGTH__+0xaa>
 288:	ea e0       	ldi	r30, 0x0A	; 10
 28a:	2e 9e       	mul	r2, r30
 28c:	20 0d       	add	r18, r0
 28e:	11 24       	eor	r1, r1
 290:	22 2e       	mov	r2, r18
 292:	f3 2d       	mov	r31, r3
 294:	f0 62       	ori	r31, 0x20	; 32
 296:	3f 2e       	mov	r3, r31
 298:	08 c0       	rjmp	.+16     	; 0x2aa <__EEPROM_REGION_LENGTH__+0xaa>
 29a:	8c 36       	cpi	r24, 0x6C	; 108
 29c:	21 f4       	brne	.+8      	; 0x2a6 <__EEPROM_REGION_LENGTH__+0xa6>
 29e:	83 2d       	mov	r24, r3
 2a0:	80 68       	ori	r24, 0x80	; 128
 2a2:	38 2e       	mov	r3, r24
 2a4:	02 c0       	rjmp	.+4      	; 0x2aa <__EEPROM_REGION_LENGTH__+0xaa>
 2a6:	88 36       	cpi	r24, 0x68	; 104
 2a8:	41 f4       	brne	.+16     	; 0x2ba <__EEPROM_REGION_LENGTH__+0xba>
 2aa:	f7 01       	movw	r30, r14
 2ac:	93 fd       	sbrc	r25, 3
 2ae:	85 91       	lpm	r24, Z+
 2b0:	93 ff       	sbrs	r25, 3
 2b2:	81 91       	ld	r24, Z+
 2b4:	7f 01       	movw	r14, r30
 2b6:	81 11       	cpse	r24, r1
 2b8:	b3 cf       	rjmp	.-154    	; 0x220 <__EEPROM_REGION_LENGTH__+0x20>
 2ba:	98 2f       	mov	r25, r24
 2bc:	9f 7d       	andi	r25, 0xDF	; 223
 2be:	95 54       	subi	r25, 0x45	; 69
 2c0:	93 30       	cpi	r25, 0x03	; 3
 2c2:	28 f4       	brcc	.+10     	; 0x2ce <__EEPROM_REGION_LENGTH__+0xce>
 2c4:	0c 5f       	subi	r16, 0xFC	; 252
 2c6:	1f 4f       	sbci	r17, 0xFF	; 255
 2c8:	9f e3       	ldi	r25, 0x3F	; 63
 2ca:	99 83       	std	Y+1, r25	; 0x01
 2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <__EEPROM_REGION_LENGTH__+0xe8>
 2ce:	83 36       	cpi	r24, 0x63	; 99
 2d0:	31 f0       	breq	.+12     	; 0x2de <__EEPROM_REGION_LENGTH__+0xde>
 2d2:	83 37       	cpi	r24, 0x73	; 115
 2d4:	71 f0       	breq	.+28     	; 0x2f2 <__EEPROM_REGION_LENGTH__+0xf2>
 2d6:	83 35       	cpi	r24, 0x53	; 83
 2d8:	09 f0       	breq	.+2      	; 0x2dc <__EEPROM_REGION_LENGTH__+0xdc>
 2da:	55 c0       	rjmp	.+170    	; 0x386 <__EEPROM_REGION_LENGTH__+0x186>
 2dc:	20 c0       	rjmp	.+64     	; 0x31e <__EEPROM_REGION_LENGTH__+0x11e>
 2de:	f8 01       	movw	r30, r16
 2e0:	80 81       	ld	r24, Z
 2e2:	89 83       	std	Y+1, r24	; 0x01
 2e4:	0e 5f       	subi	r16, 0xFE	; 254
 2e6:	1f 4f       	sbci	r17, 0xFF	; 255
 2e8:	88 24       	eor	r8, r8
 2ea:	83 94       	inc	r8
 2ec:	91 2c       	mov	r9, r1
 2ee:	53 01       	movw	r10, r6
 2f0:	12 c0       	rjmp	.+36     	; 0x316 <__EEPROM_REGION_LENGTH__+0x116>
 2f2:	28 01       	movw	r4, r16
 2f4:	f2 e0       	ldi	r31, 0x02	; 2
 2f6:	4f 0e       	add	r4, r31
 2f8:	51 1c       	adc	r5, r1
 2fa:	f8 01       	movw	r30, r16
 2fc:	a0 80       	ld	r10, Z
 2fe:	b1 80       	ldd	r11, Z+1	; 0x01
 300:	36 fe       	sbrs	r3, 6
 302:	03 c0       	rjmp	.+6      	; 0x30a <__EEPROM_REGION_LENGTH__+0x10a>
 304:	69 2d       	mov	r22, r9
 306:	70 e0       	ldi	r23, 0x00	; 0
 308:	02 c0       	rjmp	.+4      	; 0x30e <__EEPROM_REGION_LENGTH__+0x10e>
 30a:	6f ef       	ldi	r22, 0xFF	; 255
 30c:	7f ef       	ldi	r23, 0xFF	; 255
 30e:	c5 01       	movw	r24, r10
 310:	38 d1       	rcall	.+624    	; 0x582 <strnlen>
 312:	4c 01       	movw	r8, r24
 314:	82 01       	movw	r16, r4
 316:	f3 2d       	mov	r31, r3
 318:	ff 77       	andi	r31, 0x7F	; 127
 31a:	3f 2e       	mov	r3, r31
 31c:	15 c0       	rjmp	.+42     	; 0x348 <__EEPROM_REGION_LENGTH__+0x148>
 31e:	28 01       	movw	r4, r16
 320:	22 e0       	ldi	r18, 0x02	; 2
 322:	42 0e       	add	r4, r18
 324:	51 1c       	adc	r5, r1
 326:	f8 01       	movw	r30, r16
 328:	a0 80       	ld	r10, Z
 32a:	b1 80       	ldd	r11, Z+1	; 0x01
 32c:	36 fe       	sbrs	r3, 6
 32e:	03 c0       	rjmp	.+6      	; 0x336 <__EEPROM_REGION_LENGTH__+0x136>
 330:	69 2d       	mov	r22, r9
 332:	70 e0       	ldi	r23, 0x00	; 0
 334:	02 c0       	rjmp	.+4      	; 0x33a <__EEPROM_REGION_LENGTH__+0x13a>
 336:	6f ef       	ldi	r22, 0xFF	; 255
 338:	7f ef       	ldi	r23, 0xFF	; 255
 33a:	c5 01       	movw	r24, r10
 33c:	17 d1       	rcall	.+558    	; 0x56c <strnlen_P>
 33e:	4c 01       	movw	r8, r24
 340:	f3 2d       	mov	r31, r3
 342:	f0 68       	ori	r31, 0x80	; 128
 344:	3f 2e       	mov	r3, r31
 346:	82 01       	movw	r16, r4
 348:	33 fc       	sbrc	r3, 3
 34a:	19 c0       	rjmp	.+50     	; 0x37e <__EEPROM_REGION_LENGTH__+0x17e>
 34c:	82 2d       	mov	r24, r2
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	88 16       	cp	r8, r24
 352:	99 06       	cpc	r9, r25
 354:	a0 f4       	brcc	.+40     	; 0x37e <__EEPROM_REGION_LENGTH__+0x17e>
 356:	b6 01       	movw	r22, r12
 358:	80 e2       	ldi	r24, 0x20	; 32
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	1d d1       	rcall	.+570    	; 0x598 <fputc>
 35e:	2a 94       	dec	r2
 360:	f5 cf       	rjmp	.-22     	; 0x34c <__EEPROM_REGION_LENGTH__+0x14c>
 362:	f5 01       	movw	r30, r10
 364:	37 fc       	sbrc	r3, 7
 366:	85 91       	lpm	r24, Z+
 368:	37 fe       	sbrs	r3, 7
 36a:	81 91       	ld	r24, Z+
 36c:	5f 01       	movw	r10, r30
 36e:	b6 01       	movw	r22, r12
 370:	90 e0       	ldi	r25, 0x00	; 0
 372:	12 d1       	rcall	.+548    	; 0x598 <fputc>
 374:	21 10       	cpse	r2, r1
 376:	2a 94       	dec	r2
 378:	21 e0       	ldi	r18, 0x01	; 1
 37a:	82 1a       	sub	r8, r18
 37c:	91 08       	sbc	r9, r1
 37e:	81 14       	cp	r8, r1
 380:	91 04       	cpc	r9, r1
 382:	79 f7       	brne	.-34     	; 0x362 <__EEPROM_REGION_LENGTH__+0x162>
 384:	e1 c0       	rjmp	.+450    	; 0x548 <__stack+0x49>
 386:	84 36       	cpi	r24, 0x64	; 100
 388:	11 f0       	breq	.+4      	; 0x38e <__EEPROM_REGION_LENGTH__+0x18e>
 38a:	89 36       	cpi	r24, 0x69	; 105
 38c:	39 f5       	brne	.+78     	; 0x3dc <__EEPROM_REGION_LENGTH__+0x1dc>
 38e:	f8 01       	movw	r30, r16
 390:	37 fe       	sbrs	r3, 7
 392:	07 c0       	rjmp	.+14     	; 0x3a2 <__EEPROM_REGION_LENGTH__+0x1a2>
 394:	60 81       	ld	r22, Z
 396:	71 81       	ldd	r23, Z+1	; 0x01
 398:	82 81       	ldd	r24, Z+2	; 0x02
 39a:	93 81       	ldd	r25, Z+3	; 0x03
 39c:	0c 5f       	subi	r16, 0xFC	; 252
 39e:	1f 4f       	sbci	r17, 0xFF	; 255
 3a0:	08 c0       	rjmp	.+16     	; 0x3b2 <__EEPROM_REGION_LENGTH__+0x1b2>
 3a2:	60 81       	ld	r22, Z
 3a4:	71 81       	ldd	r23, Z+1	; 0x01
 3a6:	07 2e       	mov	r0, r23
 3a8:	00 0c       	add	r0, r0
 3aa:	88 0b       	sbc	r24, r24
 3ac:	99 0b       	sbc	r25, r25
 3ae:	0e 5f       	subi	r16, 0xFE	; 254
 3b0:	1f 4f       	sbci	r17, 0xFF	; 255
 3b2:	f3 2d       	mov	r31, r3
 3b4:	ff 76       	andi	r31, 0x6F	; 111
 3b6:	3f 2e       	mov	r3, r31
 3b8:	97 ff       	sbrs	r25, 7
 3ba:	09 c0       	rjmp	.+18     	; 0x3ce <__EEPROM_REGION_LENGTH__+0x1ce>
 3bc:	90 95       	com	r25
 3be:	80 95       	com	r24
 3c0:	70 95       	com	r23
 3c2:	61 95       	neg	r22
 3c4:	7f 4f       	sbci	r23, 0xFF	; 255
 3c6:	8f 4f       	sbci	r24, 0xFF	; 255
 3c8:	9f 4f       	sbci	r25, 0xFF	; 255
 3ca:	f0 68       	ori	r31, 0x80	; 128
 3cc:	3f 2e       	mov	r3, r31
 3ce:	2a e0       	ldi	r18, 0x0A	; 10
 3d0:	30 e0       	ldi	r19, 0x00	; 0
 3d2:	a3 01       	movw	r20, r6
 3d4:	1d d1       	rcall	.+570    	; 0x610 <__ultoa_invert>
 3d6:	88 2e       	mov	r8, r24
 3d8:	86 18       	sub	r8, r6
 3da:	44 c0       	rjmp	.+136    	; 0x464 <__DATA_REGION_LENGTH__+0x64>
 3dc:	85 37       	cpi	r24, 0x75	; 117
 3de:	31 f4       	brne	.+12     	; 0x3ec <__EEPROM_REGION_LENGTH__+0x1ec>
 3e0:	23 2d       	mov	r18, r3
 3e2:	2f 7e       	andi	r18, 0xEF	; 239
 3e4:	b2 2e       	mov	r11, r18
 3e6:	2a e0       	ldi	r18, 0x0A	; 10
 3e8:	30 e0       	ldi	r19, 0x00	; 0
 3ea:	25 c0       	rjmp	.+74     	; 0x436 <__DATA_REGION_LENGTH__+0x36>
 3ec:	93 2d       	mov	r25, r3
 3ee:	99 7f       	andi	r25, 0xF9	; 249
 3f0:	b9 2e       	mov	r11, r25
 3f2:	8f 36       	cpi	r24, 0x6F	; 111
 3f4:	c1 f0       	breq	.+48     	; 0x426 <__DATA_REGION_LENGTH__+0x26>
 3f6:	18 f4       	brcc	.+6      	; 0x3fe <__EEPROM_REGION_LENGTH__+0x1fe>
 3f8:	88 35       	cpi	r24, 0x58	; 88
 3fa:	79 f0       	breq	.+30     	; 0x41a <__DATA_REGION_LENGTH__+0x1a>
 3fc:	ae c0       	rjmp	.+348    	; 0x55a <__stack+0x5b>
 3fe:	80 37       	cpi	r24, 0x70	; 112
 400:	19 f0       	breq	.+6      	; 0x408 <__DATA_REGION_LENGTH__+0x8>
 402:	88 37       	cpi	r24, 0x78	; 120
 404:	21 f0       	breq	.+8      	; 0x40e <__DATA_REGION_LENGTH__+0xe>
 406:	a9 c0       	rjmp	.+338    	; 0x55a <__stack+0x5b>
 408:	e9 2f       	mov	r30, r25
 40a:	e0 61       	ori	r30, 0x10	; 16
 40c:	be 2e       	mov	r11, r30
 40e:	b4 fe       	sbrs	r11, 4
 410:	0d c0       	rjmp	.+26     	; 0x42c <__DATA_REGION_LENGTH__+0x2c>
 412:	fb 2d       	mov	r31, r11
 414:	f4 60       	ori	r31, 0x04	; 4
 416:	bf 2e       	mov	r11, r31
 418:	09 c0       	rjmp	.+18     	; 0x42c <__DATA_REGION_LENGTH__+0x2c>
 41a:	34 fe       	sbrs	r3, 4
 41c:	0a c0       	rjmp	.+20     	; 0x432 <__DATA_REGION_LENGTH__+0x32>
 41e:	29 2f       	mov	r18, r25
 420:	26 60       	ori	r18, 0x06	; 6
 422:	b2 2e       	mov	r11, r18
 424:	06 c0       	rjmp	.+12     	; 0x432 <__DATA_REGION_LENGTH__+0x32>
 426:	28 e0       	ldi	r18, 0x08	; 8
 428:	30 e0       	ldi	r19, 0x00	; 0
 42a:	05 c0       	rjmp	.+10     	; 0x436 <__DATA_REGION_LENGTH__+0x36>
 42c:	20 e1       	ldi	r18, 0x10	; 16
 42e:	30 e0       	ldi	r19, 0x00	; 0
 430:	02 c0       	rjmp	.+4      	; 0x436 <__DATA_REGION_LENGTH__+0x36>
 432:	20 e1       	ldi	r18, 0x10	; 16
 434:	32 e0       	ldi	r19, 0x02	; 2
 436:	f8 01       	movw	r30, r16
 438:	b7 fe       	sbrs	r11, 7
 43a:	07 c0       	rjmp	.+14     	; 0x44a <__DATA_REGION_LENGTH__+0x4a>
 43c:	60 81       	ld	r22, Z
 43e:	71 81       	ldd	r23, Z+1	; 0x01
 440:	82 81       	ldd	r24, Z+2	; 0x02
 442:	93 81       	ldd	r25, Z+3	; 0x03
 444:	0c 5f       	subi	r16, 0xFC	; 252
 446:	1f 4f       	sbci	r17, 0xFF	; 255
 448:	06 c0       	rjmp	.+12     	; 0x456 <__DATA_REGION_LENGTH__+0x56>
 44a:	60 81       	ld	r22, Z
 44c:	71 81       	ldd	r23, Z+1	; 0x01
 44e:	80 e0       	ldi	r24, 0x00	; 0
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	0e 5f       	subi	r16, 0xFE	; 254
 454:	1f 4f       	sbci	r17, 0xFF	; 255
 456:	a3 01       	movw	r20, r6
 458:	db d0       	rcall	.+438    	; 0x610 <__ultoa_invert>
 45a:	88 2e       	mov	r8, r24
 45c:	86 18       	sub	r8, r6
 45e:	fb 2d       	mov	r31, r11
 460:	ff 77       	andi	r31, 0x7F	; 127
 462:	3f 2e       	mov	r3, r31
 464:	36 fe       	sbrs	r3, 6
 466:	0d c0       	rjmp	.+26     	; 0x482 <__DATA_REGION_LENGTH__+0x82>
 468:	23 2d       	mov	r18, r3
 46a:	2e 7f       	andi	r18, 0xFE	; 254
 46c:	a2 2e       	mov	r10, r18
 46e:	89 14       	cp	r8, r9
 470:	58 f4       	brcc	.+22     	; 0x488 <__DATA_REGION_LENGTH__+0x88>
 472:	34 fe       	sbrs	r3, 4
 474:	0b c0       	rjmp	.+22     	; 0x48c <__DATA_REGION_LENGTH__+0x8c>
 476:	32 fc       	sbrc	r3, 2
 478:	09 c0       	rjmp	.+18     	; 0x48c <__DATA_REGION_LENGTH__+0x8c>
 47a:	83 2d       	mov	r24, r3
 47c:	8e 7e       	andi	r24, 0xEE	; 238
 47e:	a8 2e       	mov	r10, r24
 480:	05 c0       	rjmp	.+10     	; 0x48c <__DATA_REGION_LENGTH__+0x8c>
 482:	b8 2c       	mov	r11, r8
 484:	a3 2c       	mov	r10, r3
 486:	03 c0       	rjmp	.+6      	; 0x48e <__DATA_REGION_LENGTH__+0x8e>
 488:	b8 2c       	mov	r11, r8
 48a:	01 c0       	rjmp	.+2      	; 0x48e <__DATA_REGION_LENGTH__+0x8e>
 48c:	b9 2c       	mov	r11, r9
 48e:	a4 fe       	sbrs	r10, 4
 490:	0f c0       	rjmp	.+30     	; 0x4b0 <__DATA_REGION_LENGTH__+0xb0>
 492:	fe 01       	movw	r30, r28
 494:	e8 0d       	add	r30, r8
 496:	f1 1d       	adc	r31, r1
 498:	80 81       	ld	r24, Z
 49a:	80 33       	cpi	r24, 0x30	; 48
 49c:	21 f4       	brne	.+8      	; 0x4a6 <__DATA_REGION_LENGTH__+0xa6>
 49e:	9a 2d       	mov	r25, r10
 4a0:	99 7e       	andi	r25, 0xE9	; 233
 4a2:	a9 2e       	mov	r10, r25
 4a4:	09 c0       	rjmp	.+18     	; 0x4b8 <__DATA_REGION_LENGTH__+0xb8>
 4a6:	a2 fe       	sbrs	r10, 2
 4a8:	06 c0       	rjmp	.+12     	; 0x4b6 <__DATA_REGION_LENGTH__+0xb6>
 4aa:	b3 94       	inc	r11
 4ac:	b3 94       	inc	r11
 4ae:	04 c0       	rjmp	.+8      	; 0x4b8 <__DATA_REGION_LENGTH__+0xb8>
 4b0:	8a 2d       	mov	r24, r10
 4b2:	86 78       	andi	r24, 0x86	; 134
 4b4:	09 f0       	breq	.+2      	; 0x4b8 <__DATA_REGION_LENGTH__+0xb8>
 4b6:	b3 94       	inc	r11
 4b8:	a3 fc       	sbrc	r10, 3
 4ba:	10 c0       	rjmp	.+32     	; 0x4dc <__DATA_REGION_LENGTH__+0xdc>
 4bc:	a0 fe       	sbrs	r10, 0
 4be:	06 c0       	rjmp	.+12     	; 0x4cc <__DATA_REGION_LENGTH__+0xcc>
 4c0:	b2 14       	cp	r11, r2
 4c2:	80 f4       	brcc	.+32     	; 0x4e4 <__DATA_REGION_LENGTH__+0xe4>
 4c4:	28 0c       	add	r2, r8
 4c6:	92 2c       	mov	r9, r2
 4c8:	9b 18       	sub	r9, r11
 4ca:	0d c0       	rjmp	.+26     	; 0x4e6 <__DATA_REGION_LENGTH__+0xe6>
 4cc:	b2 14       	cp	r11, r2
 4ce:	58 f4       	brcc	.+22     	; 0x4e6 <__DATA_REGION_LENGTH__+0xe6>
 4d0:	b6 01       	movw	r22, r12
 4d2:	80 e2       	ldi	r24, 0x20	; 32
 4d4:	90 e0       	ldi	r25, 0x00	; 0
 4d6:	60 d0       	rcall	.+192    	; 0x598 <fputc>
 4d8:	b3 94       	inc	r11
 4da:	f8 cf       	rjmp	.-16     	; 0x4cc <__DATA_REGION_LENGTH__+0xcc>
 4dc:	b2 14       	cp	r11, r2
 4de:	18 f4       	brcc	.+6      	; 0x4e6 <__DATA_REGION_LENGTH__+0xe6>
 4e0:	2b 18       	sub	r2, r11
 4e2:	02 c0       	rjmp	.+4      	; 0x4e8 <__DATA_REGION_LENGTH__+0xe8>
 4e4:	98 2c       	mov	r9, r8
 4e6:	21 2c       	mov	r2, r1
 4e8:	a4 fe       	sbrs	r10, 4
 4ea:	0f c0       	rjmp	.+30     	; 0x50a <__stack+0xb>
 4ec:	b6 01       	movw	r22, r12
 4ee:	80 e3       	ldi	r24, 0x30	; 48
 4f0:	90 e0       	ldi	r25, 0x00	; 0
 4f2:	52 d0       	rcall	.+164    	; 0x598 <fputc>
 4f4:	a2 fe       	sbrs	r10, 2
 4f6:	16 c0       	rjmp	.+44     	; 0x524 <__stack+0x25>
 4f8:	a1 fc       	sbrc	r10, 1
 4fa:	03 c0       	rjmp	.+6      	; 0x502 <__stack+0x3>
 4fc:	88 e7       	ldi	r24, 0x78	; 120
 4fe:	90 e0       	ldi	r25, 0x00	; 0
 500:	02 c0       	rjmp	.+4      	; 0x506 <__stack+0x7>
 502:	88 e5       	ldi	r24, 0x58	; 88
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	b6 01       	movw	r22, r12
 508:	0c c0       	rjmp	.+24     	; 0x522 <__stack+0x23>
 50a:	8a 2d       	mov	r24, r10
 50c:	86 78       	andi	r24, 0x86	; 134
 50e:	51 f0       	breq	.+20     	; 0x524 <__stack+0x25>
 510:	a1 fe       	sbrs	r10, 1
 512:	02 c0       	rjmp	.+4      	; 0x518 <__stack+0x19>
 514:	8b e2       	ldi	r24, 0x2B	; 43
 516:	01 c0       	rjmp	.+2      	; 0x51a <__stack+0x1b>
 518:	80 e2       	ldi	r24, 0x20	; 32
 51a:	a7 fc       	sbrc	r10, 7
 51c:	8d e2       	ldi	r24, 0x2D	; 45
 51e:	b6 01       	movw	r22, r12
 520:	90 e0       	ldi	r25, 0x00	; 0
 522:	3a d0       	rcall	.+116    	; 0x598 <fputc>
 524:	89 14       	cp	r8, r9
 526:	30 f4       	brcc	.+12     	; 0x534 <__stack+0x35>
 528:	b6 01       	movw	r22, r12
 52a:	80 e3       	ldi	r24, 0x30	; 48
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	34 d0       	rcall	.+104    	; 0x598 <fputc>
 530:	9a 94       	dec	r9
 532:	f8 cf       	rjmp	.-16     	; 0x524 <__stack+0x25>
 534:	8a 94       	dec	r8
 536:	f3 01       	movw	r30, r6
 538:	e8 0d       	add	r30, r8
 53a:	f1 1d       	adc	r31, r1
 53c:	80 81       	ld	r24, Z
 53e:	b6 01       	movw	r22, r12
 540:	90 e0       	ldi	r25, 0x00	; 0
 542:	2a d0       	rcall	.+84     	; 0x598 <fputc>
 544:	81 10       	cpse	r8, r1
 546:	f6 cf       	rjmp	.-20     	; 0x534 <__stack+0x35>
 548:	22 20       	and	r2, r2
 54a:	09 f4       	brne	.+2      	; 0x54e <__stack+0x4f>
 54c:	4e ce       	rjmp	.-868    	; 0x1ea <vfprintf+0x22>
 54e:	b6 01       	movw	r22, r12
 550:	80 e2       	ldi	r24, 0x20	; 32
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	21 d0       	rcall	.+66     	; 0x598 <fputc>
 556:	2a 94       	dec	r2
 558:	f7 cf       	rjmp	.-18     	; 0x548 <__stack+0x49>
 55a:	f6 01       	movw	r30, r12
 55c:	86 81       	ldd	r24, Z+6	; 0x06
 55e:	97 81       	ldd	r25, Z+7	; 0x07
 560:	02 c0       	rjmp	.+4      	; 0x566 <__stack+0x67>
 562:	8f ef       	ldi	r24, 0xFF	; 255
 564:	9f ef       	ldi	r25, 0xFF	; 255
 566:	2b 96       	adiw	r28, 0x0b	; 11
 568:	e2 e1       	ldi	r30, 0x12	; 18
 56a:	cc c0       	rjmp	.+408    	; 0x704 <__epilogue_restores__>

0000056c <strnlen_P>:
 56c:	fc 01       	movw	r30, r24
 56e:	05 90       	lpm	r0, Z+
 570:	61 50       	subi	r22, 0x01	; 1
 572:	70 40       	sbci	r23, 0x00	; 0
 574:	01 10       	cpse	r0, r1
 576:	d8 f7       	brcc	.-10     	; 0x56e <strnlen_P+0x2>
 578:	80 95       	com	r24
 57a:	90 95       	com	r25
 57c:	8e 0f       	add	r24, r30
 57e:	9f 1f       	adc	r25, r31
 580:	08 95       	ret

00000582 <strnlen>:
 582:	fc 01       	movw	r30, r24
 584:	61 50       	subi	r22, 0x01	; 1
 586:	70 40       	sbci	r23, 0x00	; 0
 588:	01 90       	ld	r0, Z+
 58a:	01 10       	cpse	r0, r1
 58c:	d8 f7       	brcc	.-10     	; 0x584 <strnlen+0x2>
 58e:	80 95       	com	r24
 590:	90 95       	com	r25
 592:	8e 0f       	add	r24, r30
 594:	9f 1f       	adc	r25, r31
 596:	08 95       	ret

00000598 <fputc>:
 598:	0f 93       	push	r16
 59a:	1f 93       	push	r17
 59c:	cf 93       	push	r28
 59e:	df 93       	push	r29
 5a0:	fb 01       	movw	r30, r22
 5a2:	23 81       	ldd	r18, Z+3	; 0x03
 5a4:	21 fd       	sbrc	r18, 1
 5a6:	03 c0       	rjmp	.+6      	; 0x5ae <fputc+0x16>
 5a8:	8f ef       	ldi	r24, 0xFF	; 255
 5aa:	9f ef       	ldi	r25, 0xFF	; 255
 5ac:	2c c0       	rjmp	.+88     	; 0x606 <fputc+0x6e>
 5ae:	22 ff       	sbrs	r18, 2
 5b0:	16 c0       	rjmp	.+44     	; 0x5de <fputc+0x46>
 5b2:	46 81       	ldd	r20, Z+6	; 0x06
 5b4:	57 81       	ldd	r21, Z+7	; 0x07
 5b6:	24 81       	ldd	r18, Z+4	; 0x04
 5b8:	35 81       	ldd	r19, Z+5	; 0x05
 5ba:	42 17       	cp	r20, r18
 5bc:	53 07       	cpc	r21, r19
 5be:	44 f4       	brge	.+16     	; 0x5d0 <fputc+0x38>
 5c0:	a0 81       	ld	r26, Z
 5c2:	b1 81       	ldd	r27, Z+1	; 0x01
 5c4:	9d 01       	movw	r18, r26
 5c6:	2f 5f       	subi	r18, 0xFF	; 255
 5c8:	3f 4f       	sbci	r19, 0xFF	; 255
 5ca:	31 83       	std	Z+1, r19	; 0x01
 5cc:	20 83       	st	Z, r18
 5ce:	8c 93       	st	X, r24
 5d0:	26 81       	ldd	r18, Z+6	; 0x06
 5d2:	37 81       	ldd	r19, Z+7	; 0x07
 5d4:	2f 5f       	subi	r18, 0xFF	; 255
 5d6:	3f 4f       	sbci	r19, 0xFF	; 255
 5d8:	37 83       	std	Z+7, r19	; 0x07
 5da:	26 83       	std	Z+6, r18	; 0x06
 5dc:	14 c0       	rjmp	.+40     	; 0x606 <fputc+0x6e>
 5de:	8b 01       	movw	r16, r22
 5e0:	ec 01       	movw	r28, r24
 5e2:	fb 01       	movw	r30, r22
 5e4:	00 84       	ldd	r0, Z+8	; 0x08
 5e6:	f1 85       	ldd	r31, Z+9	; 0x09
 5e8:	e0 2d       	mov	r30, r0
 5ea:	09 95       	icall
 5ec:	89 2b       	or	r24, r25
 5ee:	e1 f6       	brne	.-72     	; 0x5a8 <fputc+0x10>
 5f0:	d8 01       	movw	r26, r16
 5f2:	16 96       	adiw	r26, 0x06	; 6
 5f4:	8d 91       	ld	r24, X+
 5f6:	9c 91       	ld	r25, X
 5f8:	17 97       	sbiw	r26, 0x07	; 7
 5fa:	01 96       	adiw	r24, 0x01	; 1
 5fc:	17 96       	adiw	r26, 0x07	; 7
 5fe:	9c 93       	st	X, r25
 600:	8e 93       	st	-X, r24
 602:	16 97       	sbiw	r26, 0x06	; 6
 604:	ce 01       	movw	r24, r28
 606:	df 91       	pop	r29
 608:	cf 91       	pop	r28
 60a:	1f 91       	pop	r17
 60c:	0f 91       	pop	r16
 60e:	08 95       	ret

00000610 <__ultoa_invert>:
 610:	fa 01       	movw	r30, r20
 612:	aa 27       	eor	r26, r26
 614:	28 30       	cpi	r18, 0x08	; 8
 616:	51 f1       	breq	.+84     	; 0x66c <__ultoa_invert+0x5c>
 618:	20 31       	cpi	r18, 0x10	; 16
 61a:	81 f1       	breq	.+96     	; 0x67c <__ultoa_invert+0x6c>
 61c:	e8 94       	clt
 61e:	6f 93       	push	r22
 620:	6e 7f       	andi	r22, 0xFE	; 254
 622:	6e 5f       	subi	r22, 0xFE	; 254
 624:	7f 4f       	sbci	r23, 0xFF	; 255
 626:	8f 4f       	sbci	r24, 0xFF	; 255
 628:	9f 4f       	sbci	r25, 0xFF	; 255
 62a:	af 4f       	sbci	r26, 0xFF	; 255
 62c:	b1 e0       	ldi	r27, 0x01	; 1
 62e:	3e d0       	rcall	.+124    	; 0x6ac <__ultoa_invert+0x9c>
 630:	b4 e0       	ldi	r27, 0x04	; 4
 632:	3c d0       	rcall	.+120    	; 0x6ac <__ultoa_invert+0x9c>
 634:	67 0f       	add	r22, r23
 636:	78 1f       	adc	r23, r24
 638:	89 1f       	adc	r24, r25
 63a:	9a 1f       	adc	r25, r26
 63c:	a1 1d       	adc	r26, r1
 63e:	68 0f       	add	r22, r24
 640:	79 1f       	adc	r23, r25
 642:	8a 1f       	adc	r24, r26
 644:	91 1d       	adc	r25, r1
 646:	a1 1d       	adc	r26, r1
 648:	6a 0f       	add	r22, r26
 64a:	71 1d       	adc	r23, r1
 64c:	81 1d       	adc	r24, r1
 64e:	91 1d       	adc	r25, r1
 650:	a1 1d       	adc	r26, r1
 652:	20 d0       	rcall	.+64     	; 0x694 <__ultoa_invert+0x84>
 654:	09 f4       	brne	.+2      	; 0x658 <__ultoa_invert+0x48>
 656:	68 94       	set
 658:	3f 91       	pop	r19
 65a:	2a e0       	ldi	r18, 0x0A	; 10
 65c:	26 9f       	mul	r18, r22
 65e:	11 24       	eor	r1, r1
 660:	30 19       	sub	r19, r0
 662:	30 5d       	subi	r19, 0xD0	; 208
 664:	31 93       	st	Z+, r19
 666:	de f6       	brtc	.-74     	; 0x61e <__ultoa_invert+0xe>
 668:	cf 01       	movw	r24, r30
 66a:	08 95       	ret
 66c:	46 2f       	mov	r20, r22
 66e:	47 70       	andi	r20, 0x07	; 7
 670:	40 5d       	subi	r20, 0xD0	; 208
 672:	41 93       	st	Z+, r20
 674:	b3 e0       	ldi	r27, 0x03	; 3
 676:	0f d0       	rcall	.+30     	; 0x696 <__ultoa_invert+0x86>
 678:	c9 f7       	brne	.-14     	; 0x66c <__ultoa_invert+0x5c>
 67a:	f6 cf       	rjmp	.-20     	; 0x668 <__ultoa_invert+0x58>
 67c:	46 2f       	mov	r20, r22
 67e:	4f 70       	andi	r20, 0x0F	; 15
 680:	40 5d       	subi	r20, 0xD0	; 208
 682:	4a 33       	cpi	r20, 0x3A	; 58
 684:	18 f0       	brcs	.+6      	; 0x68c <__ultoa_invert+0x7c>
 686:	49 5d       	subi	r20, 0xD9	; 217
 688:	31 fd       	sbrc	r19, 1
 68a:	40 52       	subi	r20, 0x20	; 32
 68c:	41 93       	st	Z+, r20
 68e:	02 d0       	rcall	.+4      	; 0x694 <__ultoa_invert+0x84>
 690:	a9 f7       	brne	.-22     	; 0x67c <__ultoa_invert+0x6c>
 692:	ea cf       	rjmp	.-44     	; 0x668 <__ultoa_invert+0x58>
 694:	b4 e0       	ldi	r27, 0x04	; 4
 696:	a6 95       	lsr	r26
 698:	97 95       	ror	r25
 69a:	87 95       	ror	r24
 69c:	77 95       	ror	r23
 69e:	67 95       	ror	r22
 6a0:	ba 95       	dec	r27
 6a2:	c9 f7       	brne	.-14     	; 0x696 <__ultoa_invert+0x86>
 6a4:	00 97       	sbiw	r24, 0x00	; 0
 6a6:	61 05       	cpc	r22, r1
 6a8:	71 05       	cpc	r23, r1
 6aa:	08 95       	ret
 6ac:	9b 01       	movw	r18, r22
 6ae:	ac 01       	movw	r20, r24
 6b0:	0a 2e       	mov	r0, r26
 6b2:	06 94       	lsr	r0
 6b4:	57 95       	ror	r21
 6b6:	47 95       	ror	r20
 6b8:	37 95       	ror	r19
 6ba:	27 95       	ror	r18
 6bc:	ba 95       	dec	r27
 6be:	c9 f7       	brne	.-14     	; 0x6b2 <__ultoa_invert+0xa2>
 6c0:	62 0f       	add	r22, r18
 6c2:	73 1f       	adc	r23, r19
 6c4:	84 1f       	adc	r24, r20
 6c6:	95 1f       	adc	r25, r21
 6c8:	a0 1d       	adc	r26, r0
 6ca:	08 95       	ret

000006cc <__prologue_saves__>:
 6cc:	2f 92       	push	r2
 6ce:	3f 92       	push	r3
 6d0:	4f 92       	push	r4
 6d2:	5f 92       	push	r5
 6d4:	6f 92       	push	r6
 6d6:	7f 92       	push	r7
 6d8:	8f 92       	push	r8
 6da:	9f 92       	push	r9
 6dc:	af 92       	push	r10
 6de:	bf 92       	push	r11
 6e0:	cf 92       	push	r12
 6e2:	df 92       	push	r13
 6e4:	ef 92       	push	r14
 6e6:	ff 92       	push	r15
 6e8:	0f 93       	push	r16
 6ea:	1f 93       	push	r17
 6ec:	cf 93       	push	r28
 6ee:	df 93       	push	r29
 6f0:	cd b7       	in	r28, 0x3d	; 61
 6f2:	de b7       	in	r29, 0x3e	; 62
 6f4:	ca 1b       	sub	r28, r26
 6f6:	db 0b       	sbc	r29, r27
 6f8:	0f b6       	in	r0, 0x3f	; 63
 6fa:	f8 94       	cli
 6fc:	de bf       	out	0x3e, r29	; 62
 6fe:	0f be       	out	0x3f, r0	; 63
 700:	cd bf       	out	0x3d, r28	; 61
 702:	09 94       	ijmp

00000704 <__epilogue_restores__>:
 704:	2a 88       	ldd	r2, Y+18	; 0x12
 706:	39 88       	ldd	r3, Y+17	; 0x11
 708:	48 88       	ldd	r4, Y+16	; 0x10
 70a:	5f 84       	ldd	r5, Y+15	; 0x0f
 70c:	6e 84       	ldd	r6, Y+14	; 0x0e
 70e:	7d 84       	ldd	r7, Y+13	; 0x0d
 710:	8c 84       	ldd	r8, Y+12	; 0x0c
 712:	9b 84       	ldd	r9, Y+11	; 0x0b
 714:	aa 84       	ldd	r10, Y+10	; 0x0a
 716:	b9 84       	ldd	r11, Y+9	; 0x09
 718:	c8 84       	ldd	r12, Y+8	; 0x08
 71a:	df 80       	ldd	r13, Y+7	; 0x07
 71c:	ee 80       	ldd	r14, Y+6	; 0x06
 71e:	fd 80       	ldd	r15, Y+5	; 0x05
 720:	0c 81       	ldd	r16, Y+4	; 0x04
 722:	1b 81       	ldd	r17, Y+3	; 0x03
 724:	aa 81       	ldd	r26, Y+2	; 0x02
 726:	b9 81       	ldd	r27, Y+1	; 0x01
 728:	ce 0f       	add	r28, r30
 72a:	d1 1d       	adc	r29, r1
 72c:	0f b6       	in	r0, 0x3f	; 63
 72e:	f8 94       	cli
 730:	de bf       	out	0x3e, r29	; 62
 732:	0f be       	out	0x3f, r0	; 63
 734:	cd bf       	out	0x3d, r28	; 61
 736:	ed 01       	movw	r28, r26
 738:	08 95       	ret

0000073a <_exit>:
 73a:	f8 94       	cli

0000073c <__stop_program>:
 73c:	ff cf       	rjmp	.-2      	; 0x73c <__stop_program>
